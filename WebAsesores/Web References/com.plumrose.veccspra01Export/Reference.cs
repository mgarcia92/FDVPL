//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WebAsesores.com.plumrose.veccspra01Export {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ExportXMLRepSoap", Namespace="http://www.xsales.biz/webservices/")]
    public partial class ExportXMLRep : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback TableSupplementOperationCompleted;
        
        private System.Threading.SendOrPostCallback TableTaxationTaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback TableMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback TableConditionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportReceivedRoutesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportUnprocessedRoutesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportTotalUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback StatusRouteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConnectorLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback AboutVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportExchangeOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportAreasOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportCatalogsOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportCollectionsOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportCompaniesOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportCustomersOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportDiscountsOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportGeneralsOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportPricesOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportProductsOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportRoutesOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportTracksOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportPlanningOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportReloadsOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportHistoriesOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportDemandsOnlyDataUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDemandsUpSchemaDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportNestedDemandsUPOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportNestedPaymentsUpOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportGivebacksOnlyDataUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportPaymentsOnlyDataUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportPromotionsOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportSpecialsOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportQuotasOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportContractsOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportDepositsOnlyDataUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportMovementsOnlyDataUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportQuotasUpOnlyDataUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportReloadUpOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportRequestUpOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportSettlementUpOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportRoutesUpOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportCustomerUpOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportSurveyOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportInterviewUPOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportAssetsOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportAssetsUpOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportHosOnlyDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback TableInfoTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback TableCustomerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback TableRouteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ExportXMLRep() {
            this.Url = global::WebAsesores.Properties.Settings.Default.WebAsesores_com_plumrose_veccspra01Export_ExportXMLRep;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event TableSupplementCompletedEventHandler TableSupplementCompleted;
        
        /// <remarks/>
        public event TableTaxationTaxCompletedEventHandler TableTaxationTaxCompleted;
        
        /// <remarks/>
        public event TableMethodCompletedEventHandler TableMethodCompleted;
        
        /// <remarks/>
        public event TableConditionCompletedEventHandler TableConditionCompleted;
        
        /// <remarks/>
        public event ExportReceivedRoutesCompletedEventHandler ExportReceivedRoutesCompleted;
        
        /// <remarks/>
        public event ExportUnprocessedRoutesCompletedEventHandler ExportUnprocessedRoutesCompleted;
        
        /// <remarks/>
        public event ExportTotalUploadCompletedEventHandler ExportTotalUploadCompleted;
        
        /// <remarks/>
        public event StatusRouteCompletedEventHandler StatusRouteCompleted;
        
        /// <remarks/>
        public event GetConnectorLogCompletedEventHandler GetConnectorLogCompleted;
        
        /// <remarks/>
        public event AboutVersionCompletedEventHandler AboutVersionCompleted;
        
        /// <remarks/>
        public event ExportExchangeOnlyDataCompletedEventHandler ExportExchangeOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportAreasOnlyDataCompletedEventHandler ExportAreasOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportCatalogsOnlyDataCompletedEventHandler ExportCatalogsOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportCollectionsOnlyDataCompletedEventHandler ExportCollectionsOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportCompaniesOnlyDataCompletedEventHandler ExportCompaniesOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportCustomersOnlyDataCompletedEventHandler ExportCustomersOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportDiscountsOnlyDataCompletedEventHandler ExportDiscountsOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportGeneralsOnlyDataCompletedEventHandler ExportGeneralsOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportPricesOnlyDataCompletedEventHandler ExportPricesOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportProductsOnlyDataCompletedEventHandler ExportProductsOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportRoutesOnlyDataCompletedEventHandler ExportRoutesOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportTracksOnlyDataCompletedEventHandler ExportTracksOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportPlanningOnlyDataCompletedEventHandler ExportPlanningOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportReloadsOnlyDataCompletedEventHandler ExportReloadsOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportHistoriesOnlyDataCompletedEventHandler ExportHistoriesOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportDemandsOnlyDataUpCompletedEventHandler ExportDemandsOnlyDataUpCompleted;
        
        /// <remarks/>
        public event GetDemandsUpSchemaDefinitionCompletedEventHandler GetDemandsUpSchemaDefinitionCompleted;
        
        /// <remarks/>
        public event ExportNestedDemandsUPOnlyDataCompletedEventHandler ExportNestedDemandsUPOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportNestedPaymentsUpOnlyDataCompletedEventHandler ExportNestedPaymentsUpOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportGivebacksOnlyDataUpCompletedEventHandler ExportGivebacksOnlyDataUpCompleted;
        
        /// <remarks/>
        public event ExportPaymentsOnlyDataUpCompletedEventHandler ExportPaymentsOnlyDataUpCompleted;
        
        /// <remarks/>
        public event ExportPromotionsOnlyDataCompletedEventHandler ExportPromotionsOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportSpecialsOnlyDataCompletedEventHandler ExportSpecialsOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportQuotasOnlyDataCompletedEventHandler ExportQuotasOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportContractsOnlyDataCompletedEventHandler ExportContractsOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportDepositsOnlyDataUpCompletedEventHandler ExportDepositsOnlyDataUpCompleted;
        
        /// <remarks/>
        public event ExportMovementsOnlyDataUpCompletedEventHandler ExportMovementsOnlyDataUpCompleted;
        
        /// <remarks/>
        public event ExportQuotasUpOnlyDataUpCompletedEventHandler ExportQuotasUpOnlyDataUpCompleted;
        
        /// <remarks/>
        public event ExportReloadUpOnlyDataCompletedEventHandler ExportReloadUpOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportRequestUpOnlyDataCompletedEventHandler ExportRequestUpOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportSettlementUpOnlyDataCompletedEventHandler ExportSettlementUpOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportRoutesUpOnlyDataCompletedEventHandler ExportRoutesUpOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportCustomerUpOnlyDataCompletedEventHandler ExportCustomerUpOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportSurveyOnlyDataCompletedEventHandler ExportSurveyOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportInterviewUPOnlyDataCompletedEventHandler ExportInterviewUPOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportAssetsOnlyDataCompletedEventHandler ExportAssetsOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportAssetsUpOnlyDataCompletedEventHandler ExportAssetsUpOnlyDataCompleted;
        
        /// <remarks/>
        public event ExportHosOnlyDataCompletedEventHandler ExportHosOnlyDataCompleted;
        
        /// <remarks/>
        public event TableInfoTypeCompletedEventHandler TableInfoTypeCompleted;
        
        /// <remarks/>
        public event TableCustomerInfoCompletedEventHandler TableCustomerInfoCompleted;
        
        /// <remarks/>
        public event TableRouteCompletedEventHandler TableRouteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/TableSupplement", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TableSupplement(string ConnectionString, string tableName, bool xsr_formated) {
            object[] results = this.Invoke("TableSupplement", new object[] {
                        ConnectionString,
                        tableName,
                        xsr_formated});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TableSupplementAsync(string ConnectionString, string tableName, bool xsr_formated) {
            this.TableSupplementAsync(ConnectionString, tableName, xsr_formated, null);
        }
        
        /// <remarks/>
        public void TableSupplementAsync(string ConnectionString, string tableName, bool xsr_formated, object userState) {
            if ((this.TableSupplementOperationCompleted == null)) {
                this.TableSupplementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTableSupplementOperationCompleted);
            }
            this.InvokeAsync("TableSupplement", new object[] {
                        ConnectionString,
                        tableName,
                        xsr_formated}, this.TableSupplementOperationCompleted, userState);
        }
        
        private void OnTableSupplementOperationCompleted(object arg) {
            if ((this.TableSupplementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TableSupplementCompleted(this, new TableSupplementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/TableTaxationTax", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TableTaxationTax(string ConnectionString) {
            object[] results = this.Invoke("TableTaxationTax", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TableTaxationTaxAsync(string ConnectionString) {
            this.TableTaxationTaxAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void TableTaxationTaxAsync(string ConnectionString, object userState) {
            if ((this.TableTaxationTaxOperationCompleted == null)) {
                this.TableTaxationTaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTableTaxationTaxOperationCompleted);
            }
            this.InvokeAsync("TableTaxationTax", new object[] {
                        ConnectionString}, this.TableTaxationTaxOperationCompleted, userState);
        }
        
        private void OnTableTaxationTaxOperationCompleted(object arg) {
            if ((this.TableTaxationTaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TableTaxationTaxCompleted(this, new TableTaxationTaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/TableMethod", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TableMethod(string ConnectionString) {
            object[] results = this.Invoke("TableMethod", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TableMethodAsync(string ConnectionString) {
            this.TableMethodAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void TableMethodAsync(string ConnectionString, object userState) {
            if ((this.TableMethodOperationCompleted == null)) {
                this.TableMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTableMethodOperationCompleted);
            }
            this.InvokeAsync("TableMethod", new object[] {
                        ConnectionString}, this.TableMethodOperationCompleted, userState);
        }
        
        private void OnTableMethodOperationCompleted(object arg) {
            if ((this.TableMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TableMethodCompleted(this, new TableMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/TableCondition", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TableCondition(string ConnectionString) {
            object[] results = this.Invoke("TableCondition", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TableConditionAsync(string ConnectionString) {
            this.TableConditionAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void TableConditionAsync(string ConnectionString, object userState) {
            if ((this.TableConditionOperationCompleted == null)) {
                this.TableConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTableConditionOperationCompleted);
            }
            this.InvokeAsync("TableCondition", new object[] {
                        ConnectionString}, this.TableConditionOperationCompleted, userState);
        }
        
        private void OnTableConditionOperationCompleted(object arg) {
            if ((this.TableConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TableConditionCompleted(this, new TableConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportReceivedRoutes", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportReceivedRoutes(string ConnectionString) {
            object[] results = this.Invoke("ExportReceivedRoutes", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportReceivedRoutesAsync(string ConnectionString) {
            this.ExportReceivedRoutesAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportReceivedRoutesAsync(string ConnectionString, object userState) {
            if ((this.ExportReceivedRoutesOperationCompleted == null)) {
                this.ExportReceivedRoutesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportReceivedRoutesOperationCompleted);
            }
            this.InvokeAsync("ExportReceivedRoutes", new object[] {
                        ConnectionString}, this.ExportReceivedRoutesOperationCompleted, userState);
        }
        
        private void OnExportReceivedRoutesOperationCompleted(object arg) {
            if ((this.ExportReceivedRoutesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportReceivedRoutesCompleted(this, new ExportReceivedRoutesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportUnprocessedRoutes", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportUnprocessedRoutes(string ConnectionString, string tableName) {
            object[] results = this.Invoke("ExportUnprocessedRoutes", new object[] {
                        ConnectionString,
                        tableName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportUnprocessedRoutesAsync(string ConnectionString, string tableName) {
            this.ExportUnprocessedRoutesAsync(ConnectionString, tableName, null);
        }
        
        /// <remarks/>
        public void ExportUnprocessedRoutesAsync(string ConnectionString, string tableName, object userState) {
            if ((this.ExportUnprocessedRoutesOperationCompleted == null)) {
                this.ExportUnprocessedRoutesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportUnprocessedRoutesOperationCompleted);
            }
            this.InvokeAsync("ExportUnprocessedRoutes", new object[] {
                        ConnectionString,
                        tableName}, this.ExportUnprocessedRoutesOperationCompleted, userState);
        }
        
        private void OnExportUnprocessedRoutesOperationCompleted(object arg) {
            if ((this.ExportUnprocessedRoutesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportUnprocessedRoutesCompleted(this, new ExportUnprocessedRoutesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportTotalUpload", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportTotalUpload(string ConnectionString, string rotCode, string jrnCode) {
            object[] results = this.Invoke("ExportTotalUpload", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportTotalUploadAsync(string ConnectionString, string rotCode, string jrnCode) {
            this.ExportTotalUploadAsync(ConnectionString, rotCode, jrnCode, null);
        }
        
        /// <remarks/>
        public void ExportTotalUploadAsync(string ConnectionString, string rotCode, string jrnCode, object userState) {
            if ((this.ExportTotalUploadOperationCompleted == null)) {
                this.ExportTotalUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportTotalUploadOperationCompleted);
            }
            this.InvokeAsync("ExportTotalUpload", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode}, this.ExportTotalUploadOperationCompleted, userState);
        }
        
        private void OnExportTotalUploadOperationCompleted(object arg) {
            if ((this.ExportTotalUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportTotalUploadCompleted(this, new ExportTotalUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/StatusRoute", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusRoute[] StatusRoute(string ConnectionString, string rotCode, string statusFilter, string partialStatusFilter) {
            object[] results = this.Invoke("StatusRoute", new object[] {
                        ConnectionString,
                        rotCode,
                        statusFilter,
                        partialStatusFilter});
            return ((StatusRoute[])(results[0]));
        }
        
        /// <remarks/>
        public void StatusRouteAsync(string ConnectionString, string rotCode, string statusFilter, string partialStatusFilter) {
            this.StatusRouteAsync(ConnectionString, rotCode, statusFilter, partialStatusFilter, null);
        }
        
        /// <remarks/>
        public void StatusRouteAsync(string ConnectionString, string rotCode, string statusFilter, string partialStatusFilter, object userState) {
            if ((this.StatusRouteOperationCompleted == null)) {
                this.StatusRouteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatusRouteOperationCompleted);
            }
            this.InvokeAsync("StatusRoute", new object[] {
                        ConnectionString,
                        rotCode,
                        statusFilter,
                        partialStatusFilter}, this.StatusRouteOperationCompleted, userState);
        }
        
        private void OnStatusRouteOperationCompleted(object arg) {
            if ((this.StatusRouteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatusRouteCompleted(this, new StatusRouteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/GetConnectorLog", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ConnectorLog GetConnectorLog(string connectionString, string cnlCode) {
            object[] results = this.Invoke("GetConnectorLog", new object[] {
                        connectionString,
                        cnlCode});
            return ((ConnectorLog)(results[0]));
        }
        
        /// <remarks/>
        public void GetConnectorLogAsync(string connectionString, string cnlCode) {
            this.GetConnectorLogAsync(connectionString, cnlCode, null);
        }
        
        /// <remarks/>
        public void GetConnectorLogAsync(string connectionString, string cnlCode, object userState) {
            if ((this.GetConnectorLogOperationCompleted == null)) {
                this.GetConnectorLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConnectorLogOperationCompleted);
            }
            this.InvokeAsync("GetConnectorLog", new object[] {
                        connectionString,
                        cnlCode}, this.GetConnectorLogOperationCompleted, userState);
        }
        
        private void OnGetConnectorLogOperationCompleted(object arg) {
            if ((this.GetConnectorLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConnectorLogCompleted(this, new GetConnectorLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/AboutVersion", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AboutVersion() {
            object[] results = this.Invoke("AboutVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AboutVersionAsync() {
            this.AboutVersionAsync(null);
        }
        
        /// <remarks/>
        public void AboutVersionAsync(object userState) {
            if ((this.AboutVersionOperationCompleted == null)) {
                this.AboutVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAboutVersionOperationCompleted);
            }
            this.InvokeAsync("AboutVersion", new object[0], this.AboutVersionOperationCompleted, userState);
        }
        
        private void OnAboutVersionOperationCompleted(object arg) {
            if ((this.AboutVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AboutVersionCompleted(this, new AboutVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportExchangeOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportExchangeOnlyData(string ConnectionString, string excTargetTable, string excDataTargetChar) {
            object[] results = this.Invoke("ExportExchangeOnlyData", new object[] {
                        ConnectionString,
                        excTargetTable,
                        excDataTargetChar});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportExchangeOnlyDataAsync(string ConnectionString, string excTargetTable, string excDataTargetChar) {
            this.ExportExchangeOnlyDataAsync(ConnectionString, excTargetTable, excDataTargetChar, null);
        }
        
        /// <remarks/>
        public void ExportExchangeOnlyDataAsync(string ConnectionString, string excTargetTable, string excDataTargetChar, object userState) {
            if ((this.ExportExchangeOnlyDataOperationCompleted == null)) {
                this.ExportExchangeOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportExchangeOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportExchangeOnlyData", new object[] {
                        ConnectionString,
                        excTargetTable,
                        excDataTargetChar}, this.ExportExchangeOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportExchangeOnlyDataOperationCompleted(object arg) {
            if ((this.ExportExchangeOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportExchangeOnlyDataCompleted(this, new ExportExchangeOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportAreasOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportAreasOnlyData(string ConnectionString) {
            object[] results = this.Invoke("ExportAreasOnlyData", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportAreasOnlyDataAsync(string ConnectionString) {
            this.ExportAreasOnlyDataAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportAreasOnlyDataAsync(string ConnectionString, object userState) {
            if ((this.ExportAreasOnlyDataOperationCompleted == null)) {
                this.ExportAreasOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportAreasOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportAreasOnlyData", new object[] {
                        ConnectionString}, this.ExportAreasOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportAreasOnlyDataOperationCompleted(object arg) {
            if ((this.ExportAreasOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportAreasOnlyDataCompleted(this, new ExportAreasOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportCatalogsOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportCatalogsOnlyData(string ConnectionString) {
            object[] results = this.Invoke("ExportCatalogsOnlyData", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportCatalogsOnlyDataAsync(string ConnectionString) {
            this.ExportCatalogsOnlyDataAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportCatalogsOnlyDataAsync(string ConnectionString, object userState) {
            if ((this.ExportCatalogsOnlyDataOperationCompleted == null)) {
                this.ExportCatalogsOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportCatalogsOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportCatalogsOnlyData", new object[] {
                        ConnectionString}, this.ExportCatalogsOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportCatalogsOnlyDataOperationCompleted(object arg) {
            if ((this.ExportCatalogsOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportCatalogsOnlyDataCompleted(this, new ExportCatalogsOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportCollectionsOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportCollectionsOnlyData(string ConnectionString) {
            object[] results = this.Invoke("ExportCollectionsOnlyData", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportCollectionsOnlyDataAsync(string ConnectionString) {
            this.ExportCollectionsOnlyDataAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportCollectionsOnlyDataAsync(string ConnectionString, object userState) {
            if ((this.ExportCollectionsOnlyDataOperationCompleted == null)) {
                this.ExportCollectionsOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportCollectionsOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportCollectionsOnlyData", new object[] {
                        ConnectionString}, this.ExportCollectionsOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportCollectionsOnlyDataOperationCompleted(object arg) {
            if ((this.ExportCollectionsOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportCollectionsOnlyDataCompleted(this, new ExportCollectionsOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportCompaniesOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportCompaniesOnlyData(string ConnectionString) {
            object[] results = this.Invoke("ExportCompaniesOnlyData", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportCompaniesOnlyDataAsync(string ConnectionString) {
            this.ExportCompaniesOnlyDataAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportCompaniesOnlyDataAsync(string ConnectionString, object userState) {
            if ((this.ExportCompaniesOnlyDataOperationCompleted == null)) {
                this.ExportCompaniesOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportCompaniesOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportCompaniesOnlyData", new object[] {
                        ConnectionString}, this.ExportCompaniesOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportCompaniesOnlyDataOperationCompleted(object arg) {
            if ((this.ExportCompaniesOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportCompaniesOnlyDataCompleted(this, new ExportCompaniesOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportCustomersOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportCustomersOnlyData(string ConnectionString) {
            object[] results = this.Invoke("ExportCustomersOnlyData", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportCustomersOnlyDataAsync(string ConnectionString) {
            this.ExportCustomersOnlyDataAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportCustomersOnlyDataAsync(string ConnectionString, object userState) {
            if ((this.ExportCustomersOnlyDataOperationCompleted == null)) {
                this.ExportCustomersOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportCustomersOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportCustomersOnlyData", new object[] {
                        ConnectionString}, this.ExportCustomersOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportCustomersOnlyDataOperationCompleted(object arg) {
            if ((this.ExportCustomersOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportCustomersOnlyDataCompleted(this, new ExportCustomersOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportDiscountsOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportDiscountsOnlyData(string ConnectionString) {
            object[] results = this.Invoke("ExportDiscountsOnlyData", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportDiscountsOnlyDataAsync(string ConnectionString) {
            this.ExportDiscountsOnlyDataAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportDiscountsOnlyDataAsync(string ConnectionString, object userState) {
            if ((this.ExportDiscountsOnlyDataOperationCompleted == null)) {
                this.ExportDiscountsOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportDiscountsOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportDiscountsOnlyData", new object[] {
                        ConnectionString}, this.ExportDiscountsOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportDiscountsOnlyDataOperationCompleted(object arg) {
            if ((this.ExportDiscountsOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportDiscountsOnlyDataCompleted(this, new ExportDiscountsOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportGeneralsOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportGeneralsOnlyData(string ConnectionString) {
            object[] results = this.Invoke("ExportGeneralsOnlyData", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportGeneralsOnlyDataAsync(string ConnectionString) {
            this.ExportGeneralsOnlyDataAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportGeneralsOnlyDataAsync(string ConnectionString, object userState) {
            if ((this.ExportGeneralsOnlyDataOperationCompleted == null)) {
                this.ExportGeneralsOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportGeneralsOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportGeneralsOnlyData", new object[] {
                        ConnectionString}, this.ExportGeneralsOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportGeneralsOnlyDataOperationCompleted(object arg) {
            if ((this.ExportGeneralsOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportGeneralsOnlyDataCompleted(this, new ExportGeneralsOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportPricesOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportPricesOnlyData(string ConnectionString) {
            object[] results = this.Invoke("ExportPricesOnlyData", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportPricesOnlyDataAsync(string ConnectionString) {
            this.ExportPricesOnlyDataAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportPricesOnlyDataAsync(string ConnectionString, object userState) {
            if ((this.ExportPricesOnlyDataOperationCompleted == null)) {
                this.ExportPricesOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportPricesOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportPricesOnlyData", new object[] {
                        ConnectionString}, this.ExportPricesOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportPricesOnlyDataOperationCompleted(object arg) {
            if ((this.ExportPricesOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportPricesOnlyDataCompleted(this, new ExportPricesOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportProductsOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportProductsOnlyData(string ConnectionString) {
            object[] results = this.Invoke("ExportProductsOnlyData", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportProductsOnlyDataAsync(string ConnectionString) {
            this.ExportProductsOnlyDataAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportProductsOnlyDataAsync(string ConnectionString, object userState) {
            if ((this.ExportProductsOnlyDataOperationCompleted == null)) {
                this.ExportProductsOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportProductsOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportProductsOnlyData", new object[] {
                        ConnectionString}, this.ExportProductsOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportProductsOnlyDataOperationCompleted(object arg) {
            if ((this.ExportProductsOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportProductsOnlyDataCompleted(this, new ExportProductsOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportRoutesOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportRoutesOnlyData(string ConnectionString) {
            object[] results = this.Invoke("ExportRoutesOnlyData", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportRoutesOnlyDataAsync(string ConnectionString) {
            this.ExportRoutesOnlyDataAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportRoutesOnlyDataAsync(string ConnectionString, object userState) {
            if ((this.ExportRoutesOnlyDataOperationCompleted == null)) {
                this.ExportRoutesOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportRoutesOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportRoutesOnlyData", new object[] {
                        ConnectionString}, this.ExportRoutesOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportRoutesOnlyDataOperationCompleted(object arg) {
            if ((this.ExportRoutesOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportRoutesOnlyDataCompleted(this, new ExportRoutesOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportTracksOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportTracksOnlyData(string ConnectionString) {
            object[] results = this.Invoke("ExportTracksOnlyData", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportTracksOnlyDataAsync(string ConnectionString) {
            this.ExportTracksOnlyDataAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportTracksOnlyDataAsync(string ConnectionString, object userState) {
            if ((this.ExportTracksOnlyDataOperationCompleted == null)) {
                this.ExportTracksOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportTracksOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportTracksOnlyData", new object[] {
                        ConnectionString}, this.ExportTracksOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportTracksOnlyDataOperationCompleted(object arg) {
            if ((this.ExportTracksOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportTracksOnlyDataCompleted(this, new ExportTracksOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportPlanningOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportPlanningOnlyData(string ConnectionString) {
            object[] results = this.Invoke("ExportPlanningOnlyData", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportPlanningOnlyDataAsync(string ConnectionString) {
            this.ExportPlanningOnlyDataAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportPlanningOnlyDataAsync(string ConnectionString, object userState) {
            if ((this.ExportPlanningOnlyDataOperationCompleted == null)) {
                this.ExportPlanningOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportPlanningOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportPlanningOnlyData", new object[] {
                        ConnectionString}, this.ExportPlanningOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportPlanningOnlyDataOperationCompleted(object arg) {
            if ((this.ExportPlanningOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportPlanningOnlyDataCompleted(this, new ExportPlanningOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportReloadsOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportReloadsOnlyData(string ConnectionString) {
            object[] results = this.Invoke("ExportReloadsOnlyData", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportReloadsOnlyDataAsync(string ConnectionString) {
            this.ExportReloadsOnlyDataAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportReloadsOnlyDataAsync(string ConnectionString, object userState) {
            if ((this.ExportReloadsOnlyDataOperationCompleted == null)) {
                this.ExportReloadsOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportReloadsOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportReloadsOnlyData", new object[] {
                        ConnectionString}, this.ExportReloadsOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportReloadsOnlyDataOperationCompleted(object arg) {
            if ((this.ExportReloadsOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportReloadsOnlyDataCompleted(this, new ExportReloadsOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportHistoriesOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportHistoriesOnlyData(string ConnectionString) {
            object[] results = this.Invoke("ExportHistoriesOnlyData", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportHistoriesOnlyDataAsync(string ConnectionString) {
            this.ExportHistoriesOnlyDataAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportHistoriesOnlyDataAsync(string ConnectionString, object userState) {
            if ((this.ExportHistoriesOnlyDataOperationCompleted == null)) {
                this.ExportHistoriesOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportHistoriesOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportHistoriesOnlyData", new object[] {
                        ConnectionString}, this.ExportHistoriesOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportHistoriesOnlyDataOperationCompleted(object arg) {
            if ((this.ExportHistoriesOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportHistoriesOnlyDataCompleted(this, new ExportHistoriesOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportDemandsOnlyDataUp", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportDemandsOnlyDataUp(string ConnectionString, string rotCode, string jrnCode) {
            object[] results = this.Invoke("ExportDemandsOnlyDataUp", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportDemandsOnlyDataUpAsync(string ConnectionString, string rotCode, string jrnCode) {
            this.ExportDemandsOnlyDataUpAsync(ConnectionString, rotCode, jrnCode, null);
        }
        
        /// <remarks/>
        public void ExportDemandsOnlyDataUpAsync(string ConnectionString, string rotCode, string jrnCode, object userState) {
            if ((this.ExportDemandsOnlyDataUpOperationCompleted == null)) {
                this.ExportDemandsOnlyDataUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportDemandsOnlyDataUpOperationCompleted);
            }
            this.InvokeAsync("ExportDemandsOnlyDataUp", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode}, this.ExportDemandsOnlyDataUpOperationCompleted, userState);
        }
        
        private void OnExportDemandsOnlyDataUpOperationCompleted(object arg) {
            if ((this.ExportDemandsOnlyDataUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportDemandsOnlyDataUpCompleted(this, new ExportDemandsOnlyDataUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/GetDemandsUpSchemaDefinition", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDemandsUpSchemaDefinition() {
            object[] results = this.Invoke("GetDemandsUpSchemaDefinition", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDemandsUpSchemaDefinitionAsync() {
            this.GetDemandsUpSchemaDefinitionAsync(null);
        }
        
        /// <remarks/>
        public void GetDemandsUpSchemaDefinitionAsync(object userState) {
            if ((this.GetDemandsUpSchemaDefinitionOperationCompleted == null)) {
                this.GetDemandsUpSchemaDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDemandsUpSchemaDefinitionOperationCompleted);
            }
            this.InvokeAsync("GetDemandsUpSchemaDefinition", new object[0], this.GetDemandsUpSchemaDefinitionOperationCompleted, userState);
        }
        
        private void OnGetDemandsUpSchemaDefinitionOperationCompleted(object arg) {
            if ((this.GetDemandsUpSchemaDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDemandsUpSchemaDefinitionCompleted(this, new GetDemandsUpSchemaDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportNestedDemandsUPOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportNestedDemandsUPOnlyData(string ConnectionString, string rotCode, string jrnCode) {
            object[] results = this.Invoke("ExportNestedDemandsUPOnlyData", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportNestedDemandsUPOnlyDataAsync(string ConnectionString, string rotCode, string jrnCode) {
            this.ExportNestedDemandsUPOnlyDataAsync(ConnectionString, rotCode, jrnCode, null);
        }
        
        /// <remarks/>
        public void ExportNestedDemandsUPOnlyDataAsync(string ConnectionString, string rotCode, string jrnCode, object userState) {
            if ((this.ExportNestedDemandsUPOnlyDataOperationCompleted == null)) {
                this.ExportNestedDemandsUPOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportNestedDemandsUPOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportNestedDemandsUPOnlyData", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode}, this.ExportNestedDemandsUPOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportNestedDemandsUPOnlyDataOperationCompleted(object arg) {
            if ((this.ExportNestedDemandsUPOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportNestedDemandsUPOnlyDataCompleted(this, new ExportNestedDemandsUPOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportNestedPaymentsUpOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportNestedPaymentsUpOnlyData(string ConnectionString, string rotCode, string jrnCode) {
            object[] results = this.Invoke("ExportNestedPaymentsUpOnlyData", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportNestedPaymentsUpOnlyDataAsync(string ConnectionString, string rotCode, string jrnCode) {
            this.ExportNestedPaymentsUpOnlyDataAsync(ConnectionString, rotCode, jrnCode, null);
        }
        
        /// <remarks/>
        public void ExportNestedPaymentsUpOnlyDataAsync(string ConnectionString, string rotCode, string jrnCode, object userState) {
            if ((this.ExportNestedPaymentsUpOnlyDataOperationCompleted == null)) {
                this.ExportNestedPaymentsUpOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportNestedPaymentsUpOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportNestedPaymentsUpOnlyData", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode}, this.ExportNestedPaymentsUpOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportNestedPaymentsUpOnlyDataOperationCompleted(object arg) {
            if ((this.ExportNestedPaymentsUpOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportNestedPaymentsUpOnlyDataCompleted(this, new ExportNestedPaymentsUpOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportGivebacksOnlyDataUp", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportGivebacksOnlyDataUp(string ConnectionString, string rotCode, string jrnCode) {
            object[] results = this.Invoke("ExportGivebacksOnlyDataUp", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportGivebacksOnlyDataUpAsync(string ConnectionString, string rotCode, string jrnCode) {
            this.ExportGivebacksOnlyDataUpAsync(ConnectionString, rotCode, jrnCode, null);
        }
        
        /// <remarks/>
        public void ExportGivebacksOnlyDataUpAsync(string ConnectionString, string rotCode, string jrnCode, object userState) {
            if ((this.ExportGivebacksOnlyDataUpOperationCompleted == null)) {
                this.ExportGivebacksOnlyDataUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportGivebacksOnlyDataUpOperationCompleted);
            }
            this.InvokeAsync("ExportGivebacksOnlyDataUp", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode}, this.ExportGivebacksOnlyDataUpOperationCompleted, userState);
        }
        
        private void OnExportGivebacksOnlyDataUpOperationCompleted(object arg) {
            if ((this.ExportGivebacksOnlyDataUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportGivebacksOnlyDataUpCompleted(this, new ExportGivebacksOnlyDataUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportPaymentsOnlyDataUp", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportPaymentsOnlyDataUp(string ConnectionString, string rotCode, string jrnCode) {
            object[] results = this.Invoke("ExportPaymentsOnlyDataUp", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportPaymentsOnlyDataUpAsync(string ConnectionString, string rotCode, string jrnCode) {
            this.ExportPaymentsOnlyDataUpAsync(ConnectionString, rotCode, jrnCode, null);
        }
        
        /// <remarks/>
        public void ExportPaymentsOnlyDataUpAsync(string ConnectionString, string rotCode, string jrnCode, object userState) {
            if ((this.ExportPaymentsOnlyDataUpOperationCompleted == null)) {
                this.ExportPaymentsOnlyDataUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportPaymentsOnlyDataUpOperationCompleted);
            }
            this.InvokeAsync("ExportPaymentsOnlyDataUp", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode}, this.ExportPaymentsOnlyDataUpOperationCompleted, userState);
        }
        
        private void OnExportPaymentsOnlyDataUpOperationCompleted(object arg) {
            if ((this.ExportPaymentsOnlyDataUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportPaymentsOnlyDataUpCompleted(this, new ExportPaymentsOnlyDataUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportPromotionsOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportPromotionsOnlyData(string ConnectionString) {
            object[] results = this.Invoke("ExportPromotionsOnlyData", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportPromotionsOnlyDataAsync(string ConnectionString) {
            this.ExportPromotionsOnlyDataAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportPromotionsOnlyDataAsync(string ConnectionString, object userState) {
            if ((this.ExportPromotionsOnlyDataOperationCompleted == null)) {
                this.ExportPromotionsOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportPromotionsOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportPromotionsOnlyData", new object[] {
                        ConnectionString}, this.ExportPromotionsOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportPromotionsOnlyDataOperationCompleted(object arg) {
            if ((this.ExportPromotionsOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportPromotionsOnlyDataCompleted(this, new ExportPromotionsOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportSpecialsOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportSpecialsOnlyData(string ConnectionString) {
            object[] results = this.Invoke("ExportSpecialsOnlyData", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportSpecialsOnlyDataAsync(string ConnectionString) {
            this.ExportSpecialsOnlyDataAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportSpecialsOnlyDataAsync(string ConnectionString, object userState) {
            if ((this.ExportSpecialsOnlyDataOperationCompleted == null)) {
                this.ExportSpecialsOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportSpecialsOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportSpecialsOnlyData", new object[] {
                        ConnectionString}, this.ExportSpecialsOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportSpecialsOnlyDataOperationCompleted(object arg) {
            if ((this.ExportSpecialsOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportSpecialsOnlyDataCompleted(this, new ExportSpecialsOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportQuotasOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportQuotasOnlyData(string ConnectionString) {
            object[] results = this.Invoke("ExportQuotasOnlyData", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportQuotasOnlyDataAsync(string ConnectionString) {
            this.ExportQuotasOnlyDataAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportQuotasOnlyDataAsync(string ConnectionString, object userState) {
            if ((this.ExportQuotasOnlyDataOperationCompleted == null)) {
                this.ExportQuotasOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportQuotasOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportQuotasOnlyData", new object[] {
                        ConnectionString}, this.ExportQuotasOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportQuotasOnlyDataOperationCompleted(object arg) {
            if ((this.ExportQuotasOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportQuotasOnlyDataCompleted(this, new ExportQuotasOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportContractsOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportContractsOnlyData(string ConnectionString) {
            object[] results = this.Invoke("ExportContractsOnlyData", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportContractsOnlyDataAsync(string ConnectionString) {
            this.ExportContractsOnlyDataAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportContractsOnlyDataAsync(string ConnectionString, object userState) {
            if ((this.ExportContractsOnlyDataOperationCompleted == null)) {
                this.ExportContractsOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportContractsOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportContractsOnlyData", new object[] {
                        ConnectionString}, this.ExportContractsOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportContractsOnlyDataOperationCompleted(object arg) {
            if ((this.ExportContractsOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportContractsOnlyDataCompleted(this, new ExportContractsOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportDepositsOnlyDataUp", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportDepositsOnlyDataUp(string ConnectionString, string rotCode, string jrnCode) {
            object[] results = this.Invoke("ExportDepositsOnlyDataUp", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportDepositsOnlyDataUpAsync(string ConnectionString, string rotCode, string jrnCode) {
            this.ExportDepositsOnlyDataUpAsync(ConnectionString, rotCode, jrnCode, null);
        }
        
        /// <remarks/>
        public void ExportDepositsOnlyDataUpAsync(string ConnectionString, string rotCode, string jrnCode, object userState) {
            if ((this.ExportDepositsOnlyDataUpOperationCompleted == null)) {
                this.ExportDepositsOnlyDataUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportDepositsOnlyDataUpOperationCompleted);
            }
            this.InvokeAsync("ExportDepositsOnlyDataUp", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode}, this.ExportDepositsOnlyDataUpOperationCompleted, userState);
        }
        
        private void OnExportDepositsOnlyDataUpOperationCompleted(object arg) {
            if ((this.ExportDepositsOnlyDataUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportDepositsOnlyDataUpCompleted(this, new ExportDepositsOnlyDataUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportMovementsOnlyDataUp", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportMovementsOnlyDataUp(string ConnectionString, string rotCode, string jrnCode) {
            object[] results = this.Invoke("ExportMovementsOnlyDataUp", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportMovementsOnlyDataUpAsync(string ConnectionString, string rotCode, string jrnCode) {
            this.ExportMovementsOnlyDataUpAsync(ConnectionString, rotCode, jrnCode, null);
        }
        
        /// <remarks/>
        public void ExportMovementsOnlyDataUpAsync(string ConnectionString, string rotCode, string jrnCode, object userState) {
            if ((this.ExportMovementsOnlyDataUpOperationCompleted == null)) {
                this.ExportMovementsOnlyDataUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportMovementsOnlyDataUpOperationCompleted);
            }
            this.InvokeAsync("ExportMovementsOnlyDataUp", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode}, this.ExportMovementsOnlyDataUpOperationCompleted, userState);
        }
        
        private void OnExportMovementsOnlyDataUpOperationCompleted(object arg) {
            if ((this.ExportMovementsOnlyDataUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportMovementsOnlyDataUpCompleted(this, new ExportMovementsOnlyDataUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportQuotasUpOnlyDataUp", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportQuotasUpOnlyDataUp(string ConnectionString, string rotCode, string jrnCode) {
            object[] results = this.Invoke("ExportQuotasUpOnlyDataUp", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportQuotasUpOnlyDataUpAsync(string ConnectionString, string rotCode, string jrnCode) {
            this.ExportQuotasUpOnlyDataUpAsync(ConnectionString, rotCode, jrnCode, null);
        }
        
        /// <remarks/>
        public void ExportQuotasUpOnlyDataUpAsync(string ConnectionString, string rotCode, string jrnCode, object userState) {
            if ((this.ExportQuotasUpOnlyDataUpOperationCompleted == null)) {
                this.ExportQuotasUpOnlyDataUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportQuotasUpOnlyDataUpOperationCompleted);
            }
            this.InvokeAsync("ExportQuotasUpOnlyDataUp", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode}, this.ExportQuotasUpOnlyDataUpOperationCompleted, userState);
        }
        
        private void OnExportQuotasUpOnlyDataUpOperationCompleted(object arg) {
            if ((this.ExportQuotasUpOnlyDataUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportQuotasUpOnlyDataUpCompleted(this, new ExportQuotasUpOnlyDataUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportReloadUpOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportReloadUpOnlyData(string ConnectionString, string rotCode, string jrnCode) {
            object[] results = this.Invoke("ExportReloadUpOnlyData", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportReloadUpOnlyDataAsync(string ConnectionString, string rotCode, string jrnCode) {
            this.ExportReloadUpOnlyDataAsync(ConnectionString, rotCode, jrnCode, null);
        }
        
        /// <remarks/>
        public void ExportReloadUpOnlyDataAsync(string ConnectionString, string rotCode, string jrnCode, object userState) {
            if ((this.ExportReloadUpOnlyDataOperationCompleted == null)) {
                this.ExportReloadUpOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportReloadUpOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportReloadUpOnlyData", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode}, this.ExportReloadUpOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportReloadUpOnlyDataOperationCompleted(object arg) {
            if ((this.ExportReloadUpOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportReloadUpOnlyDataCompleted(this, new ExportReloadUpOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportRequestUpOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportRequestUpOnlyData(string ConnectionString, string rotCode, string jrnCode) {
            object[] results = this.Invoke("ExportRequestUpOnlyData", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportRequestUpOnlyDataAsync(string ConnectionString, string rotCode, string jrnCode) {
            this.ExportRequestUpOnlyDataAsync(ConnectionString, rotCode, jrnCode, null);
        }
        
        /// <remarks/>
        public void ExportRequestUpOnlyDataAsync(string ConnectionString, string rotCode, string jrnCode, object userState) {
            if ((this.ExportRequestUpOnlyDataOperationCompleted == null)) {
                this.ExportRequestUpOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportRequestUpOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportRequestUpOnlyData", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode}, this.ExportRequestUpOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportRequestUpOnlyDataOperationCompleted(object arg) {
            if ((this.ExportRequestUpOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportRequestUpOnlyDataCompleted(this, new ExportRequestUpOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportSettlementUpOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportSettlementUpOnlyData(string ConnectionString, string rotCode, string jrnCode) {
            object[] results = this.Invoke("ExportSettlementUpOnlyData", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportSettlementUpOnlyDataAsync(string ConnectionString, string rotCode, string jrnCode) {
            this.ExportSettlementUpOnlyDataAsync(ConnectionString, rotCode, jrnCode, null);
        }
        
        /// <remarks/>
        public void ExportSettlementUpOnlyDataAsync(string ConnectionString, string rotCode, string jrnCode, object userState) {
            if ((this.ExportSettlementUpOnlyDataOperationCompleted == null)) {
                this.ExportSettlementUpOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportSettlementUpOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportSettlementUpOnlyData", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode}, this.ExportSettlementUpOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportSettlementUpOnlyDataOperationCompleted(object arg) {
            if ((this.ExportSettlementUpOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportSettlementUpOnlyDataCompleted(this, new ExportSettlementUpOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportRoutesUpOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportRoutesUpOnlyData(string ConnectionString, string rotCode, string jrnCode) {
            object[] results = this.Invoke("ExportRoutesUpOnlyData", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportRoutesUpOnlyDataAsync(string ConnectionString, string rotCode, string jrnCode) {
            this.ExportRoutesUpOnlyDataAsync(ConnectionString, rotCode, jrnCode, null);
        }
        
        /// <remarks/>
        public void ExportRoutesUpOnlyDataAsync(string ConnectionString, string rotCode, string jrnCode, object userState) {
            if ((this.ExportRoutesUpOnlyDataOperationCompleted == null)) {
                this.ExportRoutesUpOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportRoutesUpOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportRoutesUpOnlyData", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode}, this.ExportRoutesUpOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportRoutesUpOnlyDataOperationCompleted(object arg) {
            if ((this.ExportRoutesUpOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportRoutesUpOnlyDataCompleted(this, new ExportRoutesUpOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportCustomerUpOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportCustomerUpOnlyData(string ConnectionString, string rotCode, string jrnCode) {
            object[] results = this.Invoke("ExportCustomerUpOnlyData", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportCustomerUpOnlyDataAsync(string ConnectionString, string rotCode, string jrnCode) {
            this.ExportCustomerUpOnlyDataAsync(ConnectionString, rotCode, jrnCode, null);
        }
        
        /// <remarks/>
        public void ExportCustomerUpOnlyDataAsync(string ConnectionString, string rotCode, string jrnCode, object userState) {
            if ((this.ExportCustomerUpOnlyDataOperationCompleted == null)) {
                this.ExportCustomerUpOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportCustomerUpOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportCustomerUpOnlyData", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode}, this.ExportCustomerUpOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportCustomerUpOnlyDataOperationCompleted(object arg) {
            if ((this.ExportCustomerUpOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportCustomerUpOnlyDataCompleted(this, new ExportCustomerUpOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportSurveyOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportSurveyOnlyData(string ConnectionString) {
            object[] results = this.Invoke("ExportSurveyOnlyData", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportSurveyOnlyDataAsync(string ConnectionString) {
            this.ExportSurveyOnlyDataAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportSurveyOnlyDataAsync(string ConnectionString, object userState) {
            if ((this.ExportSurveyOnlyDataOperationCompleted == null)) {
                this.ExportSurveyOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportSurveyOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportSurveyOnlyData", new object[] {
                        ConnectionString}, this.ExportSurveyOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportSurveyOnlyDataOperationCompleted(object arg) {
            if ((this.ExportSurveyOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportSurveyOnlyDataCompleted(this, new ExportSurveyOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportInterviewUPOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportInterviewUPOnlyData(string ConnectionString, string rotCode, string jrnCode) {
            object[] results = this.Invoke("ExportInterviewUPOnlyData", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportInterviewUPOnlyDataAsync(string ConnectionString, string rotCode, string jrnCode) {
            this.ExportInterviewUPOnlyDataAsync(ConnectionString, rotCode, jrnCode, null);
        }
        
        /// <remarks/>
        public void ExportInterviewUPOnlyDataAsync(string ConnectionString, string rotCode, string jrnCode, object userState) {
            if ((this.ExportInterviewUPOnlyDataOperationCompleted == null)) {
                this.ExportInterviewUPOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportInterviewUPOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportInterviewUPOnlyData", new object[] {
                        ConnectionString,
                        rotCode,
                        jrnCode}, this.ExportInterviewUPOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportInterviewUPOnlyDataOperationCompleted(object arg) {
            if ((this.ExportInterviewUPOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportInterviewUPOnlyDataCompleted(this, new ExportInterviewUPOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportAssetsOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportAssetsOnlyData(string ConnectionString) {
            object[] results = this.Invoke("ExportAssetsOnlyData", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportAssetsOnlyDataAsync(string ConnectionString) {
            this.ExportAssetsOnlyDataAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportAssetsOnlyDataAsync(string ConnectionString, object userState) {
            if ((this.ExportAssetsOnlyDataOperationCompleted == null)) {
                this.ExportAssetsOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportAssetsOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportAssetsOnlyData", new object[] {
                        ConnectionString}, this.ExportAssetsOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportAssetsOnlyDataOperationCompleted(object arg) {
            if ((this.ExportAssetsOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportAssetsOnlyDataCompleted(this, new ExportAssetsOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportAssetsUpOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportAssetsUpOnlyData(string ConnectionString, string rotCode) {
            object[] results = this.Invoke("ExportAssetsUpOnlyData", new object[] {
                        ConnectionString,
                        rotCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportAssetsUpOnlyDataAsync(string ConnectionString, string rotCode) {
            this.ExportAssetsUpOnlyDataAsync(ConnectionString, rotCode, null);
        }
        
        /// <remarks/>
        public void ExportAssetsUpOnlyDataAsync(string ConnectionString, string rotCode, object userState) {
            if ((this.ExportAssetsUpOnlyDataOperationCompleted == null)) {
                this.ExportAssetsUpOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportAssetsUpOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportAssetsUpOnlyData", new object[] {
                        ConnectionString,
                        rotCode}, this.ExportAssetsUpOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportAssetsUpOnlyDataOperationCompleted(object arg) {
            if ((this.ExportAssetsUpOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportAssetsUpOnlyDataCompleted(this, new ExportAssetsUpOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/ExportHosOnlyData", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportHosOnlyData(string ConnectionString) {
            object[] results = this.Invoke("ExportHosOnlyData", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportHosOnlyDataAsync(string ConnectionString) {
            this.ExportHosOnlyDataAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void ExportHosOnlyDataAsync(string ConnectionString, object userState) {
            if ((this.ExportHosOnlyDataOperationCompleted == null)) {
                this.ExportHosOnlyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportHosOnlyDataOperationCompleted);
            }
            this.InvokeAsync("ExportHosOnlyData", new object[] {
                        ConnectionString}, this.ExportHosOnlyDataOperationCompleted, userState);
        }
        
        private void OnExportHosOnlyDataOperationCompleted(object arg) {
            if ((this.ExportHosOnlyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportHosOnlyDataCompleted(this, new ExportHosOnlyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/TableInfoType", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TableInfoType(string ConnectionString) {
            object[] results = this.Invoke("TableInfoType", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TableInfoTypeAsync(string ConnectionString) {
            this.TableInfoTypeAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void TableInfoTypeAsync(string ConnectionString, object userState) {
            if ((this.TableInfoTypeOperationCompleted == null)) {
                this.TableInfoTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTableInfoTypeOperationCompleted);
            }
            this.InvokeAsync("TableInfoType", new object[] {
                        ConnectionString}, this.TableInfoTypeOperationCompleted, userState);
        }
        
        private void OnTableInfoTypeOperationCompleted(object arg) {
            if ((this.TableInfoTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TableInfoTypeCompleted(this, new TableInfoTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/TableCustomerInfo", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TableCustomerInfo(string ConnectionString) {
            object[] results = this.Invoke("TableCustomerInfo", new object[] {
                        ConnectionString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TableCustomerInfoAsync(string ConnectionString) {
            this.TableCustomerInfoAsync(ConnectionString, null);
        }
        
        /// <remarks/>
        public void TableCustomerInfoAsync(string ConnectionString, object userState) {
            if ((this.TableCustomerInfoOperationCompleted == null)) {
                this.TableCustomerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTableCustomerInfoOperationCompleted);
            }
            this.InvokeAsync("TableCustomerInfo", new object[] {
                        ConnectionString}, this.TableCustomerInfoOperationCompleted, userState);
        }
        
        private void OnTableCustomerInfoOperationCompleted(object arg) {
            if ((this.TableCustomerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TableCustomerInfoCompleted(this, new TableCustomerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xsales.biz/webservices/TableRoute", RequestNamespace="http://www.xsales.biz/webservices/", ResponseNamespace="http://www.xsales.biz/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TableRoute(string ConnectionString, string sNameSpace) {
            object[] results = this.Invoke("TableRoute", new object[] {
                        ConnectionString,
                        sNameSpace});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TableRouteAsync(string ConnectionString, string sNameSpace) {
            this.TableRouteAsync(ConnectionString, sNameSpace, null);
        }
        
        /// <remarks/>
        public void TableRouteAsync(string ConnectionString, string sNameSpace, object userState) {
            if ((this.TableRouteOperationCompleted == null)) {
                this.TableRouteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTableRouteOperationCompleted);
            }
            this.InvokeAsync("TableRoute", new object[] {
                        ConnectionString,
                        sNameSpace}, this.TableRouteOperationCompleted, userState);
        }
        
        private void OnTableRouteOperationCompleted(object arg) {
            if ((this.TableRouteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TableRouteCompleted(this, new TableRouteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xsales.biz/webservices/")]
    public partial class StatusRoute {
        
        private string rotCodeField;
        
        private string journeyField;
        
        private System.Nullable<int> statusField;
        
        private System.Nullable<System.DateTime> statusDateField;
        
        private System.Nullable<int> partialStatusField;
        
        private System.Nullable<System.DateTime> partialStatusDateField;
        
        private string resultField;
        
        private string brcCodeField;
        
        private string chaCodeField;
        
        private string gnlNextWorkingDayField;
        
        private string lgnBackEndCodeField;
        
        /// <remarks/>
        public string rotCode {
            get {
                return this.rotCodeField;
            }
            set {
                this.rotCodeField = value;
            }
        }
        
        /// <remarks/>
        public string journey {
            get {
                return this.journeyField;
            }
            set {
                this.journeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> statusDate {
            get {
                return this.statusDateField;
            }
            set {
                this.statusDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> partialStatus {
            get {
                return this.partialStatusField;
            }
            set {
                this.partialStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> partialStatusDate {
            get {
                return this.partialStatusDateField;
            }
            set {
                this.partialStatusDateField = value;
            }
        }
        
        /// <remarks/>
        public string result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string brcCode {
            get {
                return this.brcCodeField;
            }
            set {
                this.brcCodeField = value;
            }
        }
        
        /// <remarks/>
        public string chaCode {
            get {
                return this.chaCodeField;
            }
            set {
                this.chaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string gnlNextWorkingDay {
            get {
                return this.gnlNextWorkingDayField;
            }
            set {
                this.gnlNextWorkingDayField = value;
            }
        }
        
        /// <remarks/>
        public string lgnBackEndCode {
            get {
                return this.lgnBackEndCodeField;
            }
            set {
                this.lgnBackEndCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xsales.biz/webservices/")]
    public partial class clDetail {
        
        private string tableField;
        
        private string keyField;
        
        private string statusField;
        
        private bool isOkField;
        
        private string messageField;
        
        private string routeField;
        
        private string keyExternalField;
        
        /// <remarks/>
        public string Table {
            get {
                return this.tableField;
            }
            set {
                this.tableField = value;
            }
        }
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public bool IsOk {
            get {
                return this.isOkField;
            }
            set {
                this.isOkField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string Route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
        
        /// <remarks/>
        public string KeyExternal {
            get {
                return this.keyExternalField;
            }
            set {
                this.keyExternalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xsales.biz/webservices/")]
    public partial class clSumary {
        
        private string tableField;
        
        private int okField;
        
        private int errorField;
        
        private string routeField;
        
        /// <remarks/>
        public string Table {
            get {
                return this.tableField;
            }
            set {
                this.tableField = value;
            }
        }
        
        /// <remarks/>
        public int Ok {
            get {
                return this.okField;
            }
            set {
                this.okField = value;
            }
        }
        
        /// <remarks/>
        public int Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public string Route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xsales.biz/webservices/")]
    public partial class ConnectorLog {
        
        private string idField;
        
        private System.DateTime startDateField;
        
        private System.DateTime endDateField;
        
        private string typeField;
        
        private bool jobField;
        
        private string statusTransactionField;
        
        private string durationField;
        
        private clSumary[] sumaryField;
        
        private clDetail[] detailsField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public bool Job {
            get {
                return this.jobField;
            }
            set {
                this.jobField = value;
            }
        }
        
        /// <remarks/>
        public string StatusTransaction {
            get {
                return this.statusTransactionField;
            }
            set {
                this.statusTransactionField = value;
            }
        }
        
        /// <remarks/>
        public string Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        public clSumary[] Sumary {
            get {
                return this.sumaryField;
            }
            set {
                this.sumaryField = value;
            }
        }
        
        /// <remarks/>
        public clDetail[] Details {
            get {
                return this.detailsField;
            }
            set {
                this.detailsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void TableSupplementCompletedEventHandler(object sender, TableSupplementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TableSupplementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TableSupplementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void TableTaxationTaxCompletedEventHandler(object sender, TableTaxationTaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TableTaxationTaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TableTaxationTaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void TableMethodCompletedEventHandler(object sender, TableMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TableMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TableMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void TableConditionCompletedEventHandler(object sender, TableConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TableConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TableConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportReceivedRoutesCompletedEventHandler(object sender, ExportReceivedRoutesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportReceivedRoutesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportReceivedRoutesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportUnprocessedRoutesCompletedEventHandler(object sender, ExportUnprocessedRoutesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportUnprocessedRoutesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportUnprocessedRoutesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportTotalUploadCompletedEventHandler(object sender, ExportTotalUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportTotalUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportTotalUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void StatusRouteCompletedEventHandler(object sender, StatusRouteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatusRouteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StatusRouteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusRoute[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusRoute[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetConnectorLogCompletedEventHandler(object sender, GetConnectorLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConnectorLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConnectorLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ConnectorLog Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ConnectorLog)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AboutVersionCompletedEventHandler(object sender, AboutVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AboutVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AboutVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportExchangeOnlyDataCompletedEventHandler(object sender, ExportExchangeOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportExchangeOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportExchangeOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportAreasOnlyDataCompletedEventHandler(object sender, ExportAreasOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportAreasOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportAreasOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportCatalogsOnlyDataCompletedEventHandler(object sender, ExportCatalogsOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportCatalogsOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportCatalogsOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportCollectionsOnlyDataCompletedEventHandler(object sender, ExportCollectionsOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportCollectionsOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportCollectionsOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportCompaniesOnlyDataCompletedEventHandler(object sender, ExportCompaniesOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportCompaniesOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportCompaniesOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportCustomersOnlyDataCompletedEventHandler(object sender, ExportCustomersOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportCustomersOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportCustomersOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportDiscountsOnlyDataCompletedEventHandler(object sender, ExportDiscountsOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportDiscountsOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportDiscountsOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportGeneralsOnlyDataCompletedEventHandler(object sender, ExportGeneralsOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportGeneralsOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportGeneralsOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportPricesOnlyDataCompletedEventHandler(object sender, ExportPricesOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportPricesOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportPricesOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportProductsOnlyDataCompletedEventHandler(object sender, ExportProductsOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportProductsOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportProductsOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportRoutesOnlyDataCompletedEventHandler(object sender, ExportRoutesOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportRoutesOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportRoutesOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportTracksOnlyDataCompletedEventHandler(object sender, ExportTracksOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportTracksOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportTracksOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportPlanningOnlyDataCompletedEventHandler(object sender, ExportPlanningOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportPlanningOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportPlanningOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportReloadsOnlyDataCompletedEventHandler(object sender, ExportReloadsOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportReloadsOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportReloadsOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportHistoriesOnlyDataCompletedEventHandler(object sender, ExportHistoriesOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportHistoriesOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportHistoriesOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportDemandsOnlyDataUpCompletedEventHandler(object sender, ExportDemandsOnlyDataUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportDemandsOnlyDataUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportDemandsOnlyDataUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDemandsUpSchemaDefinitionCompletedEventHandler(object sender, GetDemandsUpSchemaDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDemandsUpSchemaDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDemandsUpSchemaDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportNestedDemandsUPOnlyDataCompletedEventHandler(object sender, ExportNestedDemandsUPOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportNestedDemandsUPOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportNestedDemandsUPOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportNestedPaymentsUpOnlyDataCompletedEventHandler(object sender, ExportNestedPaymentsUpOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportNestedPaymentsUpOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportNestedPaymentsUpOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportGivebacksOnlyDataUpCompletedEventHandler(object sender, ExportGivebacksOnlyDataUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportGivebacksOnlyDataUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportGivebacksOnlyDataUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportPaymentsOnlyDataUpCompletedEventHandler(object sender, ExportPaymentsOnlyDataUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportPaymentsOnlyDataUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportPaymentsOnlyDataUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportPromotionsOnlyDataCompletedEventHandler(object sender, ExportPromotionsOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportPromotionsOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportPromotionsOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportSpecialsOnlyDataCompletedEventHandler(object sender, ExportSpecialsOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportSpecialsOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportSpecialsOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportQuotasOnlyDataCompletedEventHandler(object sender, ExportQuotasOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportQuotasOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportQuotasOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportContractsOnlyDataCompletedEventHandler(object sender, ExportContractsOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportContractsOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportContractsOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportDepositsOnlyDataUpCompletedEventHandler(object sender, ExportDepositsOnlyDataUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportDepositsOnlyDataUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportDepositsOnlyDataUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportMovementsOnlyDataUpCompletedEventHandler(object sender, ExportMovementsOnlyDataUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportMovementsOnlyDataUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportMovementsOnlyDataUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportQuotasUpOnlyDataUpCompletedEventHandler(object sender, ExportQuotasUpOnlyDataUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportQuotasUpOnlyDataUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportQuotasUpOnlyDataUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportReloadUpOnlyDataCompletedEventHandler(object sender, ExportReloadUpOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportReloadUpOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportReloadUpOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportRequestUpOnlyDataCompletedEventHandler(object sender, ExportRequestUpOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportRequestUpOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportRequestUpOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportSettlementUpOnlyDataCompletedEventHandler(object sender, ExportSettlementUpOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportSettlementUpOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportSettlementUpOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportRoutesUpOnlyDataCompletedEventHandler(object sender, ExportRoutesUpOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportRoutesUpOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportRoutesUpOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportCustomerUpOnlyDataCompletedEventHandler(object sender, ExportCustomerUpOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportCustomerUpOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportCustomerUpOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportSurveyOnlyDataCompletedEventHandler(object sender, ExportSurveyOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportSurveyOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportSurveyOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportInterviewUPOnlyDataCompletedEventHandler(object sender, ExportInterviewUPOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportInterviewUPOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportInterviewUPOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportAssetsOnlyDataCompletedEventHandler(object sender, ExportAssetsOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportAssetsOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportAssetsOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportAssetsUpOnlyDataCompletedEventHandler(object sender, ExportAssetsUpOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportAssetsUpOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportAssetsUpOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ExportHosOnlyDataCompletedEventHandler(object sender, ExportHosOnlyDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportHosOnlyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportHosOnlyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void TableInfoTypeCompletedEventHandler(object sender, TableInfoTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TableInfoTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TableInfoTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void TableCustomerInfoCompletedEventHandler(object sender, TableCustomerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TableCustomerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TableCustomerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void TableRouteCompletedEventHandler(object sender, TableRouteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TableRouteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TableRouteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591